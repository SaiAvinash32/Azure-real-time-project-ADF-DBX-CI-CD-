{
	"name": "pl_mysql_landing_to_bronze",
	"properties": {
		"activities": [
			{
				"name": "bronze layer table ingestion",
				"type": "DatabricksNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 2,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/databricks_notebooks/mysql_bronze_ingestion",
					"baseParameters": {
						"LoadID": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"bronze_schema": {
							"value": "@pipeline().parameters.metadata_lookup.bronze_schema",
							"type": "Expression"
						},
						"bronze_table": {
							"value": "@pipeline().parameters.metadata_lookup.bronze_tbl",
							"type": "Expression"
						},
						" env": {
							"value": "@pipeline().globalParameters.env",
							"type": "Expression"
						},
						"source_file_name": {
							"value": "@pipeline().parameters.metadata_lookup.source_file_or_table_name",
							"type": "Expression"
						},
						"storage_account_name": {
							"value": "@pipeline().parameters.metadata_lookup.storage_account",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_databricks_compute",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "compare records count",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "bronze layer table ingestion",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('bronze layer table ingestion').output.runOutput[0], activity('bronze layer table ingestion').output.runOutput[1])",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "records mismatch log",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 2,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/databricks_notebooks/log_record_tbl_insert",
								"baseParameters": {
									"env": {
										"value": "@pipeline().globalParameters.env",
										"type": "Expression"
									},
									"pipeLineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"logMessage": {
										"value": "@concat('The source file records do not match the records inserted into the Bronze Layer table ',pipeline().parameters.metadata_lookup.bronze_tbl)",
										"type": "Expression"
									},
									"status": {
										"value": "success",
										"type": "Expression"
									},
									"triggerType": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"loadId": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"logTimeStamp": {
										"value": "@formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy-MM-dd HH:mm:ss')\n\n",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_databricks_compute",
								"type": "LinkedServiceReference"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "bronze layer table ingestion success log",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 2,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/databricks_notebooks/log_record_tbl_insert",
								"baseParameters": {
									"env": {
										"value": "@pipeline().globalParameters.env",
										"type": "Expression"
									},
									"pipeLineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"logMessage": {
										"value": "@concat('Inserted ',activity('bronze layer table ingestion').output.runOutput[1],' records in bronze layer table ',pipeline().parameters.metadata_lookup.bronze_tbl)",
										"type": "Expression"
									},
									"status": {
										"value": "success",
										"type": "Expression"
									},
									"triggerType": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"loadId": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"logTimeStamp": {
										"value": "@formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy-MM-dd HH:mm:ss')\n\n",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_databricks_compute",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "bronze layer table ingestion failure log",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "bronze layer table ingestion",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 2,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/databricks_notebooks/log_record_tbl_insert",
					"baseParameters": {
						"env": {
							"value": "@pipeline().globalParameters.env",
							"type": "Expression"
						},
						"pipeLineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"logMessage": {
							"value": "@concat('Failed to ingest records in bronze layer table ',pipeline().parameters.metadata_lookup.bronze_tbl, ' from source file ', pipeline().parameters.metadata_lookup.source_file_or_table_name)",
							"type": "Expression"
						},
						"status": {
							"value": "@concat('Error: ',activity('bronze layer table ingestion').Error.message)",
							"type": "Expression"
						},
						"triggerType": {
							"value": "@pipeline().TriggerType",
							"type": "Expression"
						},
						"loadId": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"logTimeStamp": {
							"value": "@formatDateTime(convertFromUtc(utcNow(), 'India Standard Time'), 'yyyy-MM-dd HH:mm:ss')\n\n",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_databricks_compute",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "bronze ingestion failure email alert",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "bronze layer table ingestion",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 2,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().parameters.metadata_lookup.logic_app_url",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{\n    \"to\":\"@{pipeline().parameters.metadata_lookup.email_id}\",\n    \"subject\":\" @{concat('[',pipeline().globalParameters.env,']',pipeline().Pipeline,':[Bronze layer ingestion Failed]')}\",\n    \"email_body\":\"\n   \n    <!DOCTYPE html>\n<html>\n<body>\n    Hi all,<br/>\n    Please find below the status for @{pipeline()?.TriggeredByPipelineName}<br/><br/>\n    \n    <table>\n        <tr>\n            <th style='text-align: left;'>Parameters</th>\n            <th style='text-align: left;'>Value</th>\n        </tr>\n        <tr>\n            <td>JobID</td>\n            <td>@{pipeline().parameters.metadata_lookup.job_id}</td>\n        </tr>\n        <tr>\n            <td>Status</td>\n            <td><span style='color:Red';>Failed</span></td>\n        </tr>\n        <tr>\n            <td>Scheduled</td>\n            <td>@{pipeline().TriggerType}</td>\n        </tr>\n        <tr>\n            <td>LoadID</td>\n            <td>@{pipeline()?.TriggeredByPipelineRunId}</td>\n        </tr>\n        <tr>\n            <td>JobStart</td>\n            <td>@{pipeline().parameters.pipeline_start_time}</td>\n        </tr>\n        <tr>\n            <td>bronzetablename</td>\n            <td>@{pipeline().parameters.metadata_lookup.bronze_tbl}</td>\n        </tr>\n        <tr>\n            <td>Error</td>\n            <td>@{activity('bronze layer table ingestion').Error.message\n}</td>\n        </tr>\n    </table><br/><br/><br/>\n    \n    <p>Clever Studies team.</p>\n</body>\n</html>\n    \"\n}",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"metadata_lookup": {
				"type": "object",
				"defaultValue": {
					"source_ref_id": "mysql_host",
					"server_name": "localhost",
					"port": "3306",
					"database_name": "fmcg",
					"user_name": "root",
					"secret_name": "mysql-password",
					"storage_account": "csadlsgen2storagedev",
					"adls_url": "https://csadlsgen2storagedev.dfs.core.windows.net/",
					"container_name": "landing",
					"logic_app_url": "test_url",
					"email_id": "cleverstudies@outlook.com",
					"source_file_or_table_name": "fact_ts_ipass",
					"adls_file_path": "mysql_tables",
					"bronze_schema": "dev_bronze",
					"bronze_tbl": "fact_ts_ipass",
					"silver_schema": "dev_silver",
					"silver_tbl": "fact_ts_ipass",
					"gold_schema": "dev_gold",
					"gold_tbl": "fact_ts_ipass"
				}
			},
			"pipeline_start_time": {
				"type": "string"
			}
		},
		"annotations": []
	}
}